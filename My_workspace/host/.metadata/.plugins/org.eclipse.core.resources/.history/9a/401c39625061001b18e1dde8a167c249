/*
 * main.c
 *
 *  Created on: Jan 26, 2021
 *      Author: simon
 */


#include <stdio.h>
#include <stdint.h>

#define BYTE_TO_BINARY_PATTERN "%c%c%c%c%c%c%c%c"
#define BYTE_TO_BINARY(byte)  \
  (byte & 0x80 ? '1' : '0'), \
  (byte & 0x40 ? '1' : '0'), \
  (byte & 0x20 ? '1' : '0'), \
  (byte & 0x10 ? '1' : '0'), \
  (byte & 0x08 ? '1' : '0'), \
  (byte & 0x04 ? '1' : '0'), \
  (byte & 0x02 ? '1' : '0'), \
  (byte & 0x01 ? '1' : '0')

void exerciseOne();
void exerciseTwo();

int main(){

	//exerciseOne();
	exerciseTwo();
}

void exerciseOne(){
	//Do bitwise calculations
	int32_t num1, num2;

	printf("Enter two numbers: ");
	scanf("%d %d", &num1, &num2);
	printf("You entered "BYTE_TO_BINARY_PATTERN" (%d)\n        and "BYTE_TO_BINARY_PATTERN" (%d)\n", BYTE_TO_BINARY(num1), num1, BYTE_TO_BINARY(num2), num2);

	int32_t bitwiseAnd = num1 & num2;
	printf("Bitwise &: "BYTE_TO_BINARY_PATTERN" (%d)\n",
			BYTE_TO_BINARY(bitwiseAnd), bitwiseAnd);

	int32_t bitwiseOr = num1 | num2;
	printf("Bitwise |: "BYTE_TO_BINARY_PATTERN" (%d)\n",
			BYTE_TO_BINARY(bitwiseOr), bitwiseOr);

	int32_t bitwiseXOR = num1 ^ num2;
	printf("Bitwise ^: "BYTE_TO_BINARY_PATTERN" (%d)\n",
			BYTE_TO_BINARY(bitwiseXOR), bitwiseXOR);

	int32_t bitwiseNot = ~num1;
	printf("Bitwise ~: "BYTE_TO_BINARY_PATTERN" (%d)\n",
			BYTE_TO_BINARY(bitwiseNot), bitwiseNot);
}

void exerciseTwo(){
	//Testing of bits : Test if number is even or odd
	//Bit Masking

	int32_t num;
	int32_t mask = 1;
	printf("Enter a number: ");
	scanf("%d", &num);

	int32_t output = num & mask; //Use the mask value with the And bit operator to test the bits we set as 1 in the mask
	printf("Output is: "BYTE_TO_BINARY_PATTERN" (%d)\n", BYTE_TO_BINARY(output), output);
	(output) ? printf("Number is even") : printf("Number is odd");

}
